// Required scene builder function
Scene Build()
{
  Scene scene = new Scene();
  scene.Size = new ImageSize(1024, 768);
  
  Camera camera = new Camera(new Point3(5.0, 8.0, -10.0),    // Position
                             new Point3(0.0, 0.0, 0.0),      // Look at
                             Vector3.UnitY,                  // Up
                             4.0,                            // Focal length
                             scene.Size);                    // Aspect
  scene.Camera = camera;

  Light l = new Light(new Point3(-1.0, 5.0, -10.0),  // Position
                      new Colour(1.0),               // Colour
                      0.5);                          // Intensity
  scene.Add(l);

  l = new Light(new Point3(10.0, -5.0, 0.0),   // Position
                new Colour(1.0),               // Colour
                0.5);                          // Intensity
  scene.Add(l);

  scene.Antialias = true;

  Finish fin;
  Pigment pig;
  Material mat;

  fin = new Finish(0.5, 0.5, 0.5, 0.5);
  pig = new Pigment(Colour.Tomato);
  mat = new Material(pig, fin);

  pig = new Pigment(Colour.Lime, Colour.Navy, RealFunctions.Perlin);
  pig.Scale = 0.1;
  mat = new Material(pig, fin);

  Aggregate a = new Aggregate(mat);
  sphereflake(a, Point3.Origin , 1.0, 0, 0.5, 4);
  // Create a top level bounding volume
  Sphere bound = new Sphere(Point3.Origin, 2.9);
  a.Bound = bound;
  scene.Add(a);
  
  return scene;
}

// Recursive object definition
void sphereflake(Aggregate a, Point3 p, double r, int orient, double ratio, int level)
{
  a.Add(new Sphere(p, r));
  if(level < 1) return;
  double dist = (1.0 + ratio) * r;
  double rr = r * ratio;
  Vector3 X = new Vector3(dist, 0.0, 0.0);
  Vector3 Y = new Vector3(0.0, dist, 0.0);
  Vector3 Z = new Vector3(0.0, 0.0, dist);

  if(orient != 1) sphereflake(a, p + X, rr, 2, ratio, level - 1);
  if(orient != 2) sphereflake(a, p - X, rr, 1, ratio, level - 1);
  if(orient != 3) sphereflake(a, p + Y, rr, 4, ratio, level - 1);
  if(orient != 4) sphereflake(a, p - Y, rr, 3, ratio, level - 1);
  if(orient != 5) sphereflake(a, p + Z, rr, 6, ratio, level - 1);
  if(orient != 6) sphereflake(a, p - Z, rr, 5, ratio, level - 1);
}
